name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup CMake
        uses: lukka/get-cmake@latest
      
      - name: Setup Clang
        run: |
          choco install llvm --version=21.1.0 -y
          $env:PATH = "C:\Program Files\LLVM\bin;$env:PATH"
          echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          clang --version
      
      - name: Configure CMake
        run: cmake --preset default -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
      
      - name: Build Release
        run: cmake --build build --config Release
      
      - name: Build Debug
        run: cmake --build build --config Debug
      
      - name: Create Release directory structure
        run: |
          New-Item -ItemType Directory -Force -Path release-package
          New-Item -ItemType Directory -Force -Path release-package/assets
          Copy-Item build/Release/funny-keyboard.exe release-package/
          if (Test-Path assets) {
            Copy-Item -Recurse assets/* release-package/assets/
          }
          if (Test-Path build/Release/config.json) {
            Copy-Item build/Release/config.json release-package/
          }
      
      - name: Create Debug directory structure
        run: |
          New-Item -ItemType Directory -Force -Path debug-package
          New-Item -ItemType Directory -Force -Path debug-package/assets
          Copy-Item build/Debug/funny-keyboard.exe debug-package/
          Copy-Item build/Debug/funny-keyboard.pdb debug-package/
          if (Test-Path assets) {
            Copy-Item -Recurse assets/* debug-package/assets/
          }
          if (Test-Path build/Debug/config.json) {
            Copy-Item build/Debug/config.json debug-package/
          }
      
      - name: Create Release zip
        run: Compress-Archive -Path release-package/* -DestinationPath funny-keyboard.zip
      
      - name: Create Debug zip
        run: Compress-Archive -Path debug-package/* -DestinationPath funny-keyboard-debug.zip
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            | Release  | Debug    |
            |----------|----------|
            | [Download](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/funny-keyboard.zip) | [Download](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/funny-keyboard-debug.zip) |

            Default assets are included.
            Download and extract the appropriate zip file
            Run `funny-keyboard.exe`
            Press `Ctrl+Alt+F` to exit
          generate_release_notes: true
          files: |
            funny-keyboard.zip
            funny-keyboard-debug.zip
